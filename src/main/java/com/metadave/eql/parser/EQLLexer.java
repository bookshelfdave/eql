// Generated from ./src/main/java/com/metadave/eql/parser/EQL.g4 by ANTLR 4.5
package com.metadave.eql.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class EQLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, INDEX=4, SORT=5, AGGREGATE=6, CONNECT=7, QUERY=8, 
		FILTER=9, ALL=10, GET=11, RETURNKW=12, FROM=13, WITH=14, ON=15, TO=16, 
		AND=17, OR=18, NOT=19, AT=20, DOLLAR=21, SPLAT=22, COMMA=23, LSQUARE=24, 
		RSQUARE=25, LPAREN=26, RPAREN=27, EQUALS=28, DOT=29, SEMI=30, ID=31, INT=32, 
		FLOAT=33, ANY_UNTIL_COLON=34, DOUBLE_STRING=35, SINGLE_STRING=36, DATA_CONTENT=37, 
		LINE_COMMENT=38, COMMENT=39, WS=40, WSCHARS=41;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "INDEX", "SORT", "AGGREGATE", "CONNECT", "QUERY", 
		"FILTER", "ALL", "GET", "RETURNKW", "FROM", "WITH", "ON", "TO", "AND", 
		"OR", "NOT", "AT", "DOLLAR", "SPLAT", "COMMA", "LSQUARE", "RSQUARE", "LPAREN", 
		"RPAREN", "EQUALS", "DOT", "SEMI", "ID", "LOWER", "UPPER", "INT", "DIGIT", 
		"FLOAT", "ANY_UNTIL_COLON", "DOUBLE_STRING", "ESC", "SINGLE_STRING", "SESC", 
		"DATA_CONTENT", "DATA_ESC", "LINE_COMMENT", "COMMENT", "WS", "WSCHARS", 
		"Zs", "Cc", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", 
		"M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "':'", "'asc'", "'desc'", null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "'@'", "'$'", "'*'", 
		"','", "'['", "']'", "'('", "')'", "'='", "'.'", "';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, "INDEX", "SORT", "AGGREGATE", "CONNECT", "QUERY", 
		"FILTER", "ALL", "GET", "RETURNKW", "FROM", "WITH", "ON", "TO", "AND", 
		"OR", "NOT", "AT", "DOLLAR", "SPLAT", "COMMA", "LSQUARE", "RSQUARE", "LPAREN", 
		"RPAREN", "EQUALS", "DOT", "SEMI", "ID", "INT", "FLOAT", "ANY_UNTIL_COLON", 
		"DOUBLE_STRING", "SINGLE_STRING", "DATA_CONTENT", "LINE_COMMENT", "COMMENT", 
		"WS", "WSCHARS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public EQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "EQL.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2+\u01d9\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5"+
		"\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3"+
		"\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\n"+
		"\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3"+
		"\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3"+
		"\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3"+
		"\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3 \3 \3 \7"+
		" \u0114\n \f \16 \u0117\13 \3!\3!\3\"\3\"\3#\6#\u011e\n#\r#\16#\u011f"+
		"\3$\3$\3%\6%\u0125\n%\r%\16%\u0126\3%\3%\7%\u012b\n%\f%\16%\u012e\13%"+
		"\3%\3%\6%\u0132\n%\r%\16%\u0133\5%\u0136\n%\3&\7&\u0139\n&\f&\16&\u013c"+
		"\13&\3&\3&\3\'\3\'\3\'\7\'\u0143\n\'\f\'\16\'\u0146\13\'\3\'\3\'\3(\3"+
		"(\3(\3(\5(\u014e\n(\3)\3)\3)\7)\u0153\n)\f)\16)\u0156\13)\3)\3)\3*\3*"+
		"\3*\3*\5*\u015e\n*\3+\3+\3+\3+\3+\3+\7+\u0166\n+\f+\16+\u0169\13+\3+\3"+
		"+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3,\5,\u0177\n,\3-\3-\3-\3-\7-\u017d\n-\f"+
		"-\16-\u0180\13-\3-\5-\u0183\n-\3-\3-\3-\3-\3.\3.\3.\3.\7.\u018d\n.\f."+
		"\16.\u0190\13.\3.\3.\3.\3.\3.\3/\3/\3/\6/\u019a\n/\r/\16/\u019b\3/\3/"+
		"\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66"+
		"\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\3A\3"+
		"A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3K\3K\3L\3L\b"+
		"\u013a\u0144\u0154\u0167\u017e\u018e\2M\3\3\5\4\7\5\t\6\13\7\r\b\17\t"+
		"\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27"+
		"-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\2C\2E\"G\2I#K$M%O\2Q&S\2"+
		"U\'W\2Y([)]*_+a\2c\2e\2g\2i\2k\2m\2o\2q\2s\2u\2w\2y\2{\2}\2\177\2\u0081"+
		"\2\u0083\2\u0085\2\u0087\2\u0089\2\u008b\2\u008d\2\u008f\2\u0091\2\u0093"+
		"\2\u0095\2\u0097\2\3\2 \4\2\60\60aa\5\2\13\f\17\17\"\"\t\2\"\"\u00a2\u00a2"+
		"\u1682\u1682\u2002\u200c\u2031\u2031\u2061\u2061\u3002\u3002\4\2\2!\u0081"+
		"\u00a1\4\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJj"+
		"j\4\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2"+
		"SSss\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4"+
		"\2\\\\||\u01cf\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3"+
		"\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2"+
		"\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3"+
		"\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2"+
		"\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2"+
		"9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2E\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2Q\3\2\2\2\2U\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2"+
		"\2\2_\3\2\2\2\3\u0099\3\2\2\2\5\u009b\3\2\2\2\7\u009f\3\2\2\2\t\u00a4"+
		"\3\2\2\2\13\u00aa\3\2\2\2\r\u00af\3\2\2\2\17\u00b9\3\2\2\2\21\u00c1\3"+
		"\2\2\2\23\u00c7\3\2\2\2\25\u00ce\3\2\2\2\27\u00d2\3\2\2\2\31\u00d6\3\2"+
		"\2\2\33\u00dd\3\2\2\2\35\u00e2\3\2\2\2\37\u00e7\3\2\2\2!\u00ea\3\2\2\2"+
		"#\u00ed\3\2\2\2%\u00f1\3\2\2\2\'\u00f4\3\2\2\2)\u00f8\3\2\2\2+\u00fa\3"+
		"\2\2\2-\u00fc\3\2\2\2/\u00fe\3\2\2\2\61\u0100\3\2\2\2\63\u0102\3\2\2\2"+
		"\65\u0104\3\2\2\2\67\u0106\3\2\2\29\u0108\3\2\2\2;\u010a\3\2\2\2=\u010c"+
		"\3\2\2\2?\u010e\3\2\2\2A\u0118\3\2\2\2C\u011a\3\2\2\2E\u011d\3\2\2\2G"+
		"\u0121\3\2\2\2I\u0135\3\2\2\2K\u013a\3\2\2\2M\u013f\3\2\2\2O\u014d\3\2"+
		"\2\2Q\u014f\3\2\2\2S\u015d\3\2\2\2U\u015f\3\2\2\2W\u0176\3\2\2\2Y\u0178"+
		"\3\2\2\2[\u0188\3\2\2\2]\u0199\3\2\2\2_\u019f\3\2\2\2a\u01a1\3\2\2\2c"+
		"\u01a3\3\2\2\2e\u01a5\3\2\2\2g\u01a7\3\2\2\2i\u01a9\3\2\2\2k\u01ab\3\2"+
		"\2\2m\u01ad\3\2\2\2o\u01af\3\2\2\2q\u01b1\3\2\2\2s\u01b3\3\2\2\2u\u01b5"+
		"\3\2\2\2w\u01b7\3\2\2\2y\u01b9\3\2\2\2{\u01bb\3\2\2\2}\u01bd\3\2\2\2\177"+
		"\u01bf\3\2\2\2\u0081\u01c1\3\2\2\2\u0083\u01c3\3\2\2\2\u0085\u01c5\3\2"+
		"\2\2\u0087\u01c7\3\2\2\2\u0089\u01c9\3\2\2\2\u008b\u01cb\3\2\2\2\u008d"+
		"\u01cd\3\2\2\2\u008f\u01cf\3\2\2\2\u0091\u01d1\3\2\2\2\u0093\u01d3\3\2"+
		"\2\2\u0095\u01d5\3\2\2\2\u0097\u01d7\3\2\2\2\u0099\u009a\7<\2\2\u009a"+
		"\4\3\2\2\2\u009b\u009c\7c\2\2\u009c\u009d\7u\2\2\u009d\u009e\7e\2\2\u009e"+
		"\6\3\2\2\2\u009f\u00a0\7f\2\2\u00a0\u00a1\7g\2\2\u00a1\u00a2\7u\2\2\u00a2"+
		"\u00a3\7e\2\2\u00a3\b\3\2\2\2\u00a4\u00a5\5u;\2\u00a5\u00a6\5\177@\2\u00a6"+
		"\u00a7\5k\66\2\u00a7\u00a8\5m\67\2\u00a8\u00a9\5\u0093J\2\u00a9\n\3\2"+
		"\2\2\u00aa\u00ab\5\u0089E\2\u00ab\u00ac\5\u0081A\2\u00ac\u00ad\5\u0087"+
		"D\2\u00ad\u00ae\5\u008bF\2\u00ae\f\3\2\2\2\u00af\u00b0\5e\63\2\u00b0\u00b1"+
		"\5q9\2\u00b1\u00b2\5q9\2\u00b2\u00b3\5\u0087D\2\u00b3\u00b4\5m\67\2\u00b4"+
		"\u00b5\5q9\2\u00b5\u00b6\5e\63\2\u00b6\u00b7\5\u008bF\2\u00b7\u00b8\5"+
		"m\67\2\u00b8\16\3\2\2\2\u00b9\u00ba\5i\65\2\u00ba\u00bb\5\u0081A\2\u00bb"+
		"\u00bc\5\177@\2\u00bc\u00bd\5\177@\2\u00bd\u00be\5m\67\2\u00be\u00bf\5"+
		"i\65\2\u00bf\u00c0\5\u008bF\2\u00c0\20\3\2\2\2\u00c1\u00c2\5\u0085C\2"+
		"\u00c2\u00c3\5\u008dG\2\u00c3\u00c4\5m\67\2\u00c4\u00c5\5\u0087D\2\u00c5"+
		"\u00c6\5\u0095K\2\u00c6\22\3\2\2\2\u00c7\u00c8\5o8\2\u00c8\u00c9\5u;\2"+
		"\u00c9\u00ca\5{>\2\u00ca\u00cb\5\u008bF\2\u00cb\u00cc\5m\67\2\u00cc\u00cd"+
		"\5\u0087D\2\u00cd\24\3\2\2\2\u00ce\u00cf\5e\63\2\u00cf\u00d0\5{>\2\u00d0"+
		"\u00d1\5{>\2\u00d1\26\3\2\2\2\u00d2\u00d3\5q9\2\u00d3\u00d4\5m\67\2\u00d4"+
		"\u00d5\5\u008bF\2\u00d5\30\3\2\2\2\u00d6\u00d7\5\u0087D\2\u00d7\u00d8"+
		"\5m\67\2\u00d8\u00d9\5\u008bF\2\u00d9\u00da\5\u008dG\2\u00da\u00db\5\u0087"+
		"D\2\u00db\u00dc\5\177@\2\u00dc\32\3\2\2\2\u00dd\u00de\5o8\2\u00de\u00df"+
		"\5\u0087D\2\u00df\u00e0\5\u0081A\2\u00e0\u00e1\5}?\2\u00e1\34\3\2\2\2"+
		"\u00e2\u00e3\5\u0091I\2\u00e3\u00e4\5u;\2\u00e4\u00e5\5\u008bF\2\u00e5"+
		"\u00e6\5s:\2\u00e6\36\3\2\2\2\u00e7\u00e8\5\u0081A\2\u00e8\u00e9\5\177"+
		"@\2\u00e9 \3\2\2\2\u00ea\u00eb\5\u008bF\2\u00eb\u00ec\5\u0081A\2\u00ec"+
		"\"\3\2\2\2\u00ed\u00ee\5e\63\2\u00ee\u00ef\5\177@\2\u00ef\u00f0\5k\66"+
		"\2\u00f0$\3\2\2\2\u00f1\u00f2\5\u0081A\2\u00f2\u00f3\5\u0087D\2\u00f3"+
		"&\3\2\2\2\u00f4\u00f5\5\177@\2\u00f5\u00f6\5\u0081A\2\u00f6\u00f7\5\u008b"+
		"F\2\u00f7(\3\2\2\2\u00f8\u00f9\7B\2\2\u00f9*\3\2\2\2\u00fa\u00fb\7&\2"+
		"\2\u00fb,\3\2\2\2\u00fc\u00fd\7,\2\2\u00fd.\3\2\2\2\u00fe\u00ff\7.\2\2"+
		"\u00ff\60\3\2\2\2\u0100\u0101\7]\2\2\u0101\62\3\2\2\2\u0102\u0103\7_\2"+
		"\2\u0103\64\3\2\2\2\u0104\u0105\7*\2\2\u0105\66\3\2\2\2\u0106\u0107\7"+
		"+\2\2\u01078\3\2\2\2\u0108\u0109\7?\2\2\u0109:\3\2\2\2\u010a\u010b\7\60"+
		"\2\2\u010b<\3\2\2\2\u010c\u010d\7=\2\2\u010d>\3\2\2\2\u010e\u0115\5A!"+
		"\2\u010f\u0114\5C\"\2\u0110\u0114\5A!\2\u0111\u0114\5G$\2\u0112\u0114"+
		"\t\2\2\2\u0113\u010f\3\2\2\2\u0113\u0110\3\2\2\2\u0113\u0111\3\2\2\2\u0113"+
		"\u0112\3\2\2\2\u0114\u0117\3\2\2\2\u0115\u0113\3\2\2\2\u0115\u0116\3\2"+
		"\2\2\u0116@\3\2\2\2\u0117\u0115\3\2\2\2\u0118\u0119\4c|\2\u0119B\3\2\2"+
		"\2\u011a\u011b\4C\\\2\u011bD\3\2\2\2\u011c\u011e\5G$\2\u011d\u011c\3\2"+
		"\2\2\u011e\u011f\3\2\2\2\u011f\u011d\3\2\2\2\u011f\u0120\3\2\2\2\u0120"+
		"F\3\2\2\2\u0121\u0122\4\62;\2\u0122H\3\2\2\2\u0123\u0125\5G$\2\u0124\u0123"+
		"\3\2\2\2\u0125\u0126\3\2\2\2\u0126\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127"+
		"\u0128\3\2\2\2\u0128\u012c\5;\36\2\u0129\u012b\5G$\2\u012a\u0129\3\2\2"+
		"\2\u012b\u012e\3\2\2\2\u012c\u012a\3\2\2\2\u012c\u012d\3\2\2\2\u012d\u0136"+
		"\3\2\2\2\u012e\u012c\3\2\2\2\u012f\u0131\5;\36\2\u0130\u0132\5G$\2\u0131"+
		"\u0130\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0131\3\2\2\2\u0133\u0134\3\2"+
		"\2\2\u0134\u0136\3\2\2\2\u0135\u0124\3\2\2\2\u0135\u012f\3\2\2\2\u0136"+
		"J\3\2\2\2\u0137\u0139\13\2\2\2\u0138\u0137\3\2\2\2\u0139\u013c\3\2\2\2"+
		"\u013a\u013b\3\2\2\2\u013a\u0138\3\2\2\2\u013b\u013d\3\2\2\2\u013c\u013a"+
		"\3\2\2\2\u013d\u013e\7<\2\2\u013eL\3\2\2\2\u013f\u0144\7$\2\2\u0140\u0143"+
		"\5O(\2\u0141\u0143\13\2\2\2\u0142\u0140\3\2\2\2\u0142\u0141\3\2\2\2\u0143"+
		"\u0146\3\2\2\2\u0144\u0145\3\2\2\2\u0144\u0142\3\2\2\2\u0145\u0147\3\2"+
		"\2\2\u0146\u0144\3\2\2\2\u0147\u0148\7$\2\2\u0148N\3\2\2\2\u0149\u014a"+
		"\7^\2\2\u014a\u014e\7$\2\2\u014b\u014c\7^\2\2\u014c\u014e\7^\2\2\u014d"+
		"\u0149\3\2\2\2\u014d\u014b\3\2\2\2\u014eP\3\2\2\2\u014f\u0154\7)\2\2\u0150"+
		"\u0153\5S*\2\u0151\u0153\13\2\2\2\u0152\u0150\3\2\2\2\u0152\u0151\3\2"+
		"\2\2\u0153\u0156\3\2\2\2\u0154\u0155\3\2\2\2\u0154\u0152\3\2\2\2\u0155"+
		"\u0157\3\2\2\2\u0156\u0154\3\2\2\2\u0157\u0158\7)\2\2\u0158R\3\2\2\2\u0159"+
		"\u015a\7^\2\2\u015a\u015e\7)\2\2\u015b\u015c\7^\2\2\u015c\u015e\7^\2\2"+
		"\u015d\u0159\3\2\2\2\u015d\u015b\3\2\2\2\u015eT\3\2\2\2\u015f\u0160\7"+
		"\u0080\2\2\u0160\u0161\7\'\2\2\u0161\u0162\7\u0080\2\2\u0162\u0167\3\2"+
		"\2\2\u0163\u0166\5W,\2\u0164\u0166\13\2\2\2\u0165\u0163\3\2\2\2\u0165"+
		"\u0164\3\2\2\2\u0166\u0169\3\2\2\2\u0167\u0168\3\2\2\2\u0167\u0165\3\2"+
		"\2\2\u0168\u016a\3\2\2\2\u0169\u0167\3\2\2\2\u016a\u016b\7\u0080\2\2\u016b"+
		"\u016c\7\'\2\2\u016c\u016d\7\u0080\2\2\u016dV\3\2\2\2\u016e\u016f\7^\2"+
		"\2\u016f\u0170\7\u0080\2\2\u0170\u0171\7\'\2\2\u0171\u0177\7\u0080\2\2"+
		"\u0172\u0173\7^\2\2\u0173\u0174\7\u0080\2\2\u0174\u0175\7\'\2\2\u0175"+
		"\u0177\7\u0080\2\2\u0176\u016e\3\2\2\2\u0176\u0172\3\2\2\2\u0177X\3\2"+
		"\2\2\u0178\u0179\7\61\2\2\u0179\u017a\7\61\2\2\u017a\u017e\3\2\2\2\u017b"+
		"\u017d\13\2\2\2\u017c\u017b\3\2\2\2\u017d\u0180\3\2\2\2\u017e\u017f\3"+
		"\2\2\2\u017e\u017c\3\2\2\2\u017f\u0182\3\2\2\2\u0180\u017e\3\2\2\2\u0181"+
		"\u0183\7\17\2\2\u0182\u0181\3\2\2\2\u0182\u0183\3\2\2\2\u0183\u0184\3"+
		"\2\2\2\u0184\u0185\7\f\2\2\u0185\u0186\3\2\2\2\u0186\u0187\b-\2\2\u0187"+
		"Z\3\2\2\2\u0188\u0189\7\61\2\2\u0189\u018a\7,\2\2\u018a\u018e\3\2\2\2"+
		"\u018b\u018d\13\2\2\2\u018c\u018b\3\2\2\2\u018d\u0190\3\2\2\2\u018e\u018f"+
		"\3\2\2\2\u018e\u018c\3\2\2\2\u018f\u0191\3\2\2\2\u0190\u018e\3\2\2\2\u0191"+
		"\u0192\7,\2\2\u0192\u0193\7\61\2\2\u0193\u0194\3\2\2\2\u0194\u0195\b."+
		"\2\2\u0195\\\3\2\2\2\u0196\u019a\5_\60\2\u0197\u019a\5a\61\2\u0198\u019a"+
		"\5c\62\2\u0199\u0196\3\2\2\2\u0199\u0197\3\2\2\2\u0199\u0198\3\2\2\2\u019a"+
		"\u019b\3\2\2\2\u019b\u0199\3\2\2\2\u019b\u019c\3\2\2\2\u019c\u019d\3\2"+
		"\2\2\u019d\u019e\b/\3\2\u019e^\3\2\2\2\u019f\u01a0\t\3\2\2\u01a0`\3\2"+
		"\2\2\u01a1\u01a2\t\4\2\2\u01a2b\3\2\2\2\u01a3\u01a4\t\5\2\2\u01a4d\3\2"+
		"\2\2\u01a5\u01a6\t\6\2\2\u01a6f\3\2\2\2\u01a7\u01a8\t\7\2\2\u01a8h\3\2"+
		"\2\2\u01a9\u01aa\t\b\2\2\u01aaj\3\2\2\2\u01ab\u01ac\t\t\2\2\u01acl\3\2"+
		"\2\2\u01ad\u01ae\t\n\2\2\u01aen\3\2\2\2\u01af\u01b0\t\13\2\2\u01b0p\3"+
		"\2\2\2\u01b1\u01b2\t\f\2\2\u01b2r\3\2\2\2\u01b3\u01b4\t\r\2\2\u01b4t\3"+
		"\2\2\2\u01b5\u01b6\t\16\2\2\u01b6v\3\2\2\2\u01b7\u01b8\t\17\2\2\u01b8"+
		"x\3\2\2\2\u01b9\u01ba\t\20\2\2\u01baz\3\2\2\2\u01bb\u01bc\t\21\2\2\u01bc"+
		"|\3\2\2\2\u01bd\u01be\t\22\2\2\u01be~\3\2\2\2\u01bf\u01c0\t\23\2\2\u01c0"+
		"\u0080\3\2\2\2\u01c1\u01c2\t\24\2\2\u01c2\u0082\3\2\2\2\u01c3\u01c4\t"+
		"\25\2\2\u01c4\u0084\3\2\2\2\u01c5\u01c6\t\26\2\2\u01c6\u0086\3\2\2\2\u01c7"+
		"\u01c8\t\27\2\2\u01c8\u0088\3\2\2\2\u01c9\u01ca\t\30\2\2\u01ca\u008a\3"+
		"\2\2\2\u01cb\u01cc\t\31\2\2\u01cc\u008c\3\2\2\2\u01cd\u01ce\t\32\2\2\u01ce"+
		"\u008e\3\2\2\2\u01cf\u01d0\t\33\2\2\u01d0\u0090\3\2\2\2\u01d1\u01d2\t"+
		"\34\2\2\u01d2\u0092\3\2\2\2\u01d3\u01d4\t\35\2\2\u01d4\u0094\3\2\2\2\u01d5"+
		"\u01d6\t\36\2\2\u01d6\u0096\3\2\2\2\u01d7\u01d8\t\37\2\2\u01d8\u0098\3"+
		"\2\2\2\31\2\u0113\u0115\u011f\u0126\u012c\u0133\u0135\u013a\u0142\u0144"+
		"\u014d\u0152\u0154\u015d\u0165\u0167\u0176\u017e\u0182\u018e\u0199\u019b"+
		"\4\b\2\2\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}